plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.japring-lab'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	"""Swagger (springdoc-openapi)"""
	//	구 프로젝트 유지용
	//	대상 : Spring Boot 2.x , Java 8-11
	//	Jakarta : javax.servlet (기존)
	//	모듈 구조 : 단일 모듈 중심
	// Swagger UI는 /swagger-ui.html로 접속
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.12'

	//	신규 프로젝트
	//	대상 : Spring Boot 3.x 이상 , Java 17 이상
	//	Jakarta : jakarta.servlet (변경됨)
	//	모듈 구조 : 	Starter 기반 분리 (Starter, Core 등)
	// Swagger UI는 /swagger-ui/index.html 경로 사용
	// implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	"""Lombok"""
	// 의존성 추가만 하고 버전을 명시하지 않을 수 있음
	// build 시 gradle이 자동으로 최신 안정 버전 또는 상위 dependency tree에서 제공되는 버전 사용함
	// 하지만, 예상치 못한 버전 충돌이나 예외 가능성 있음 (다른 라이브러리가 다른 lombok 버전을 명시했을 경우)
	// compileOnly 'org.projectlombok:lombok'

	// 버전 명시
	compileOnly 'org.projectlombok:lombok:1.18.22' //컴파일 시에만 적용되고, 런타임에는 포함되지 않음
	annotationProcessor 'org.projectlombok:lombok:1.18.22' //롬복이 @Getter, @Builder 등의 코드를 컴파일 타임에 생성할 수 있게 함

	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
